#!/bin/bash

# üöÄ VEER NIRMAN - Production Deployment Script
# This script handles complete deployment of the Veer Nirman application

set -e  # Exit on any error

echo "üáÆüá≥ VEER NIRMAN - Production Deployment"
echo "========================================"

# Configuration
PROJECT_DIR="/home/jawwad-linux/Documents/Veer_Nirman"
BACKEND_DIR="$PROJECT_DIR/backend"
FRONTEND_DIR="$PROJECT_DIR/frontend"
CONDA_ENV="ncc_abyas"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if we're in the right directory
if [ ! -d "frontend" ] || [ ! -d "backend" ]; then
    echo -e "${RED}‚ùå Please run this script from the project root directory${NC}"
    exit 1
fi

echo -e "${BLUE}üìã Pre-deployment Checklist${NC}"
echo "================================"

# 1. Check environment files
echo -e "${YELLOW}1. Checking environment configuration...${NC}"
if [ ! -f "backend/.env" ]; then
    echo -e "${RED}‚ùå Backend .env file missing${NC}"
    echo "   Please create backend/.env from backend/.env.example"
    exit 1
fi

if [ ! -f "frontend/.env.local" ]; then
    echo -e "${RED}‚ùå Frontend .env.local file missing${NC}"
    echo "   Please create frontend/.env.local from frontend/.env.example"
    exit 1
fi

echo -e "${GREEN}‚úÖ Environment files found${NC}"

# 2. Check Firebase configuration
echo -e "${YELLOW}2. Checking Firebase configuration...${NC}"
if [ ! -f "frontend/firebase-config.json" ]; then
    echo -e "${RED}‚ùå Firebase configuration missing${NC}"
    echo "   Please ensure firebase-config.json is properly configured"
    exit 1
fi

echo -e "${GREEN}‚úÖ Firebase configuration found${NC}"

# 3. Install dependencies
echo -e "${YELLOW}3. Installing dependencies...${NC}"
echo "   Installing frontend dependencies..."
cd frontend
npm install
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Frontend dependency installation failed${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Frontend dependencies installed${NC}"

# 4. Build frontend
echo -e "${YELLOW}4. Building frontend for production...${NC}"
npm run build
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Frontend build failed${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Frontend built successfully${NC}"

# 5. Test backend
echo -e "${YELLOW}5. Testing backend...${NC}"
cd ../backend
# Activate conda environment and test
conda activate ncc_abyas
timeout 5 python main.py > /dev/null 2>&1
if [ $? -eq 124 ]; then
    echo -e "${GREEN}‚úÖ Backend starts successfully${NC}"
else
    echo -e "${RED}‚ùå Backend startup failed${NC}"
    exit 1
fi

# 6. Firebase deployment
echo -e "${YELLOW}6. Deploying to Firebase...${NC}"
cd ../frontend

# Check if Firebase CLI is installed
if ! command -v firebase &> /dev/null; then
    echo -e "${RED}‚ùå Firebase CLI not found${NC}"
    echo "   Please install Firebase CLI: npm install -g firebase-tools"
    exit 1
fi

# Deploy to Firebase
firebase deploy
if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Firebase deployment failed${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Firebase deployment successful${NC}"

echo
echo -e "${GREEN}üéâ DEPLOYMENT COMPLETE!${NC}"
echo "=========================="
echo
echo "Your application is now live!"
echo "Frontend: Check Firebase hosting URL"
echo "Backend: Deploy to your preferred cloud provider"
echo
echo "Next steps:"
echo "1. Set up custom domain (if needed)"
echo "2. Configure SSL certificates"
echo "3. Set up monitoring and logging"
echo "4. Create backup strategy"
echo
echo -e "${BLUE}Happy deployment! üöÄ${NC}"
